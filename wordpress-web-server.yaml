heat_template_version: 2013-05-23

description: |
  This is a Heat template to deploy a single Linux server running a WordPress.

parameters:

  # Server settings
  wp_web_server_hostname:
    description: WordPress Web Server Name
    type: string
    default: WordPress-Web
    constraints:
    - length:
        min: 1
        max: 64
    - allowed_pattern: "^[a-zA-Z][a-zA-Z0-9-]*$"
      description: |
        Must begin with a letter and contain only alphanumeric characters.

  image:
    description: Server Image used for all servers.
    type: string
    default: Ubuntu 12.04 LTS (Precise Pangolin)
    constraints:
    - allowed_values:
      - Ubuntu 12.04 LTS (Precise Pangolin)
      description: Must be a supported operating system.

  wp_web_server_flavor:
    description: Web Cloud Server flavor
    type: string
    default: 2 GB Performance
    constraints:
    - allowed_values:
      - 1 GB Performance
      - 2 GB Performance
      - 4 GB Performance
      - 8 GB Performance
      - 15 GB Performance
      - 30 GB Performance
      - 1GB Standard Instance
      - 2GB Standard Instance
      - 4GB Standard Instance
      - 8GB Standard Instance
      - 15GB Standard Instance
      - 30GB Standard Instance
      description: |
        Must be a valid Rackspace Cloud Server flavor for the region you have
        selected to deploy into.

  # WordPress settings
  domain:
    description: Domain to be used with WordPress site
    type: string
    default: "example.com"

  version:
    description: Version of WordPress to install
    type: string
    default: 3.8.1

  wp_install_directory:
    description: Path to install and setup WordPress
    type: string
    default: "/var/www/vhosts/wordpress"

  # Optional Apache settings (SSL certs)
  # ssl_private_key:
  #  description: Private SSL key
  #  type: string
  #  default: ""
  #  constraints:
  #  - allowed_pattern: "^(.){0,5000}$"
  #    description: "Key values must be under 5,000 characters"

  # ssl_certificate:
  #  description: Public SSL key
  #  type: string
  #  default: ""
  #  constraints:
  #  - allowed_pattern: "^(.){0,5000}$"
  #    description: "Certificate values must be under 5,000 characters"

  # ssl_intermediate_certs:
  #  description: Intermediate SSL Certificates
  #  type: string
  #  default: ""
  #  constraints:
  #  - allowed_pattern: "^(.){0,5000}$"
  #    description: "Intermediate values must be under 5,000 characters."

  # Database and system user configuration
  prefix:
    description: Prefix to use for
    type: string
    default: wp_

  database_name:
    description: WordPress database name
    type: string
    default: wordpress

  database_host:
    description: IP/Host of the database server
    type: string
    default: 127.0.0.1

  username:
    description: "Username for system, database, and WordPress logins."
    type: string
    default: wp_user

  database_password:
    description: "Password to use for database connections."
    type: string

  # SSH Keypair naming
  ssh_keypair_name:
    description: "keypair name to register with Nova for the root SSH key"
    type: string

  ssh_public_key:
    type: string

  ssh_private_key:
    type: string

  # Lsync public key
  lsync_pub:
    description: Public key for lsync configuration
    type: string
    constraints:

  # Varnish Master backend
  varnish_master_backend:
    description: Master backend host for admin calls in Varnish
    type: string
    default: "localhost"

  # Random strings for WP salting
  wp_auth:
    type: string

  wp_logged_in:
    type: string

  wp_nonce:
    type: string

  wp_secure_auth:
    type: string

resources:

  wp_web_server:
    type: "Rackspace::Cloud::Server"
    properties:
      name: { get_param: wp_web_server_hostname }
      flavor: { get_param: wp_web_server_flavor }
      image: { get_param: image }
      key_name: { get_param: ssh_keypair_name }

  bootstrap_wp_web_server:
    type: "OS::Heat::ChefSolo"
    properties:
      username: root
      private_key: { get_param: ssh_private_key }
      host: { get_attr: [wp_web_server, accessIPv4] }
      Berksfile: |
        #!/usr/bin/env ruby
        # ^syntax detection

        site :opscode

        cookbook 'apt'
        cookbook 'build-essential'
      node:
        run_list: ["recipe[apt]",
                   "recipe[build-essential]"]

  wp_web_server_setup:
    type: "OS::Heat::ChefSolo"
    depends_on: bootstrap_wp_web_server
    properties:
      username: root
      private_key: { get_param: ssh_private_key }
      host: { get_attr: [wp_web_server, accessIPv4] }
      Berksfile: |
        #!/usr/bin/env ruby
        # ^syntax detection

        site :opscode

        cookbook 'apt'
        cookbook 'apache2',
          :git => 'https://github.com/opscode-cookbooks/apache2.git'
        cookbook 'build-essential'
        cookbook 'firewall'
        cookbook 'memcached'
        cookbook 'mysql',
          :git => 'https://github.com/opscode-cookbooks/mysql'
        cookbook 'wordpress',
          :git => 'https://github.com/opscode-cookbooks/wordpress'
        cookbook 'php',
          :git => 'https://github.com/opscode-cookbooks/php'

        cookbook 'sysctl',
          :git => 'https://github.com/spheromak/sysctl-cookbook'
        cookbook 'vsftpd',
          :git => 'https://github.com/cwjohnston/chef-vsftpd'
        cookbook 'monit',
          :git => 'https://github.com/apsoto/monit'
        cookbook 'hollandbackup',
          :git => 'https://github.com/brint/hollandbackup'
        cookbook 'varnish',
          :git => 'https://github.com/opscode-cookbooks/varnish'
        cookbook 'lsyncd',
          :git => 'https://github.com/dgivens/chef-lsyncd/'
        cookbook 'rax-wordpress',
          :git => 'https://github.com/brint/rax-wordpress-cookbook'
        cookbook 'cron',
          :git => 'https://github.com/opscode-cookbooks/cron',
          :ref => '9545e3449b68903a024e8600877fedeeccb58366'
      node:
        apache:
          listen_ports: [8080]
          timeout: 30
          serversignature: "Off"
          traceenable: "Off"
        memcached:
          listen: "localhost"
        varnish:
          listen_port: "80"
        wordpress:
          version: { get_param: version }
          server_aliases: [{ get_param: domain }]
          dir: "/var/www/vhosts/wordpress"
          db:
            name: { get_param: database_name }
            user: { get_param: username }
            pass: { get_param: database_password }
            host: { get_param: database_host }
          keys:
            auth: { get_param: wp_auth }
            logged_in: { get_param: wp_logged_in }
            nonce_key: { get_param: wp_nonce }
            secure_auth_key: { get_param: wp_secure_auth }
        rax:
          apache:
            domain: { get_param: domain }
            # ssl_private_key: { get_param: ssl_private_key }
            # ssl_certificate: { get_param: ssl_certificate }
            # ssl_intermediate_certs: { get_param: ssl_intermediate_certs }
          lsyncd:
            ssh:
              pub: { get_param: lsync_pub }
          varnish:
            master_backend: { get_param: varnish_master_backend }
        run_list: ["recipe[apt]",
                   "recipe[rax-wordpress::apache-prep]",
                   "recipe[rax-wordpress::x509]",
                   "recipe[memcached]",
                   "recipe[php]",
                   "recipe[php::module_memcache]",
                   "recipe[wordpress]",
                   "recipe[varnish::apt_repo]",
                   "recipe[varnish]",
                   "recipe[rax-wordpress::apache]",
                   "recipe[rax-wordpress::varnish]",
                   "recipe[rax-wordpress::firewall]",
                   "recipe[rax-wordpress::lsyncd-client]"]

outputs:
  wp_web_server_ip:
    value: { get_attr: [wp_web_server, accessIPv4] }

  privateIPv4:
    value: { get_attr: [wp_web_server, privateIPv4] }
